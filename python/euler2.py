#!/usr/bin/env python

'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not exceed four million.
'''
class Memoize:
    """Memoize(fn) - an instance which acts like fn but memoizes its arguments
       Will only work on functions with non-mutable arguments
    """
    def __init__(self, fn):
        self.fn = fn
        self.memo = {}
    def __call__(self, *args):
        if not self.memo.has_key(args):
            self.memo[args] = self.fn(*args)
        return self.memo[args]


def fib(n):
    if n < 2:
        return 1
    return fib(n-1) + fib(n-2)






fib = Memoize(fib)
numsum = 0
for i in xrange(0, 4000000):
    num = fib(i)
    if num < 4000000:
        if num % 2==0:
            numsum += num
    else:
        break

print "Answer: %s"%numsum
